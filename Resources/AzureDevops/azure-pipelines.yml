resources:
  repositories:
  - repository: self
  - repository: dfc-devops
    type: github
    name: SkillsFundingAgency/dfc-devops
    ref: refs/tags/v1.9.1
    endpoint: 'GitHub (ESFA)'

stages:
# Build all the artefacts
- stage: Build
  variables:
    SolutionPrefix: 'Dfc.Poc'
    BuildPlatform: 'any cpu'
    BuildConfiguration: 'release'

  jobs:
  # ARM template
  - job:
    displayName: "Check ARM templates"
    pool: 'NCS - CI and CD'
    steps:
    - template: /AzureDevOpsTemplates/Build/StepTemplates/dfc-arm-build.yml@dfc-devops
      parameters:
        ArmTemplateRoot: "$(System.DefaultWorkingDirectory)/Resources/ArmTemplates"

  # Web App
  - job:
    displayName: "Build website"
    pool: 'NCS - CI and CD'
    steps:
    - template: /AzureDevOpsTemplates/Build/StepTemplates/dfc-dotnetcore-build-notests.yml@dfc-devops
      parameters:
        SolutionBaseName: "$(SolutionPrefix).WebApp"
        BuildPlatform: $(BuildPlatform)
        BuildConfiguration: $(BuildConfiguration)
        PublishWebApp: true

  # Function App
  - job:
    displayName: "Build function app"
    pool: 'NCS - CI and CD'
    steps:
    - template: /AzureDevOpsTemplates/Build/StepTemplates/dfc-dotnetcore-build-notests.yml@dfc-devops
      parameters:
        SolutionBaseName: "$(SolutionPrefix).FunctionApp"
        BuildPlatform: $(BuildPlatform)
        BuildConfiguration: $(BuildConfiguration)
        PublishWebApp: true

# Deploy to the dev env on sucessful build, if it is the master branch and not a pull request
- stage: DeployToDev
  condition: and(succeeded(), eq(variables['Build.SourceBranchName'], 'master'), ne(variables['Build.Reason'], 'PullRequest'))
  jobs:
  - template: JobTemplates/Deploy.yml