# OWASP testing

parameters:
  OwaspTarget: ''
  ZapWorkingDirectory: "$(System.DefaultWorkingDirectory)/zap"
  ZapReportName: 'OWASP-ZAP-Report.xml'
  ConvertedReportName: 'Converted-OWASP-ZAP-Report.xml'
  ConvertReportScriptUrl: 'https://raw.githubusercontent.com/SkillsFundingAgency/dfc-devops/master/DockerFiles/AzureDevOpsAgents/AgentScripts/convert-report.ps1'
  ConvertReportScriptFilePath: '$(System.DefaultWorkingDirectory)\convert-report.ps1'

steps:
# Download 
- task: PowerShell@2
  name: DownloadConvertReportScript
  displayName: 'Download convert-report script'
  inputs:
    targetType: 'inline'
    script: |
      New-Item -Path "${{ parameters.ZapWorkingDirectory }}" -ItemType Directory -ErrorAction SilentlyContinue
      Invoke-WebRequest -Uri ${{ parameters.ConvertReportScriptUrl }} -OutFile ${{ parameters.ConvertReportScriptFilePath }}
  
# Run the zap test 
- bash: |
    zap-baseline.py -t https://${{ parameters.OwaspTarget }} -I -g gen.conf -x ${{ parameters.ZapReportName }}
  workingDirectory: ${{ parameters.ZapWorkingDirectory }}
  displayName: "Bash Script: Run OWASP on ${{ parameters.OwaspTarget }}"
  continueOnError: true
    
# convert report format
- task: PowerShell@2
  name: ConvertReportScript
  displayName: 'PowerShell Script: convert-report.ps1'
  inputs:
    targetType: 'filePath'
    filePath: ${{ parameters.ConvertReportScriptFilePath }}
    arguments: "-PathToInputReport ${{ parameters.ZapReportName }} -PathToOutputReport ${{ parameters.ConvertedReportName }}"
    pwsh: true
    workingDirectory: "${{ parameters.ZapWorkingDirectory }}/wrk/"

# Publish report
- task: PublishTestResults@2
  displayName: "Publish Test Results ${{ parameters.ConvertedReportName }}"
  inputs:
    testResultsFormat: NUnit
    testResultsFiles: ${{ parameters.ConvertedReportName }}
    searchFolder: "${{ parameters.ZapWorkingDirectory }}/wrk/"
    